import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE')
    classpath('com.commercehub.gradle.plugin:gradle-avro-plugin:0.17.0')
  }
}

plugins {
  id 'com.bmuschko.docker-remote-api' version '3.2.3'
  id 'application'
  id 'java'
  id 'org.springframework.boot' version "2.1.9.RELEASE"
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
  maven { url 'https://packages.confluent.io/maven/' }
  jcenter()
}

application {
  mainClassName 'io.simplesource.example.demo.App'
}

def versions = [
  elasticsearch: "7.4.0",
  spring:"2.1.9.RELEASE",
  simplesource:"0.2.7"
]

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web:${versions.spring}")
  compile("org.springframework.boot:spring-boot-starter-thymeleaf:${versions.spring}")
  compile('org.webjars:bootstrap:4.3.1')

  compile("io.simplesource:simplesource-command-api:${versions.simplesource}")
  compile("io.simplesource:simplesource-command-kafka:${versions.simplesource}")
  compile("io.simplesource:simplesource-command-serialization:${versions.simplesource}")

  compile 'org.apache.avro:avro:1.9.1'
  compile('org.apache.kafka:kafka-clients:2.3.0')

  compile("org.elasticsearch.client:elasticsearch-rest-high-level-client:${versions.elasticsearch}")
  compile("org.elasticsearch.client:elasticsearch-rest-client:${versions.elasticsearch}")
  compile("org.elasticsearch:elasticsearch:${versions.elasticsearch}")
}


task createDockerfile(type: Dockerfile) {
  destFile = project.file('build/docker/Dockerfile')
  from 'openjdk:11-jre-slim'
  copyFile "build/libs/aws-demo.jar", '/opt/microservice.jar'
  entryPoint 'java'
  defaultCommand '-jar', '/opt/microservice.jar'
}
